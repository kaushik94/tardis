# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - master

variables:
  system.debug: "true"
  ref.data.home: "$(Agent.BuildDirectory)/tardis-refdata"
  ref.data.github.url: "https://github.com/tardis-sn/tardis-refdata.git"
  tardis.build.dir: $(Build.Repository.LocalPath)
  codecov.token: "a876d307-9ed5-4f5d-a6c4-e58291ac4111"

jobs:
  - job: "Test"
    pool:
      vmImage: $[variables.vm_Image]

    strategy:
      matrix:
        linux:
          vm_Image: "Ubuntu-16.04"
        mac:
          vm_Image: "macOS-10.14"
      maxParallel: 2

    steps:
      - bash: echo "##vso[task.setvariable variable=shellopts]errexit"
        displayName: "Force exit on error (bash) "

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: "Add conda to PATH"

      - bash: sudo chown -R $USER $CONDA
        condition: eq( variables['Agent.OS'], 'Darwin' )
        displayName: "Take ownership of conda installation (macOS)"

      - bash: conda install mamba=0.4.0 -c conda-forge -y
        displayName: "Install mamba"

      - bash: mamba env create -f tardis_env3.yml
        displayName: "Install TARDIS environment"

      - bash: |
              GIT_LFS_SMUDGE=1 git clone $(ref.data.github.url) $(ref.data.home)
              cd $(ref.data.home)
              git fetch origin
              git checkout origin/master
              git lfs pull --include="atom_data/kurucz_cd23_chianti_H_He.h5" origin
              git lfs pull --include="atom_data/chianti_He.h5" origin
              git lfs pull --include="plasma_reference/" origin
              git lfs pull --include="unit_test_data.h5" origin
              git lfs pull --include="packet_unittest.h5" origin
              echo MD5: `md5sum unit_test_data.h5`
        displayName: "Fetch reference data"

      - bash: |
              source activate tardis
              python setup.py build_ext --inplace
        displayName: "TARDIS build"

      - bash: |
              source activate tardis
              pip install pytest-azurepipelines
              pytest tardis --tardis-refdata=$(ref.data.home) --cov=tardis --cov-report=xml --cov-report=html
        displayName: "TARDIS test"

      - bash: |
              bash <(curl -s https://codecov.io/bash)
        displayName: "Upload to codecov.io"
